{"ast":null,"code":"var _jsxFileName = \"/Users/raheelahmad/Downloads/projects/reactjs/02-authentication/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPasword = passwordInputRef.current.value; //optional: Add Validations (REGEX) [password > 8 characters, contains @#$!%^, at least one number]\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      //sign in\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAXnD_ob8wbuFKBWW1PDHwceGSljY5n-Uw\";\n    } else {\n      //sign up\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAXnD_ob8wbuFKBWW1PDHwceGSljY5n-Uw\";\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPasword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication Failed'; // if (data && data.error && data.error.message) {\n          //   errorMessage = data.error.message;\n          // }\n          // alert(errorMessage)\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      authCtx.login(data.idToken);\n      console.log(data);\n    }).catch(err => {\n      alert(err.message);\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"V9mgLlHICzGobfscsxv8TBwG27I=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/raheelahmad/Downloads/projects/reactjs/02-authentication/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","AuthContext","useHistory","classes","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","enteredEmail","current","value","enteredPasword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","login","idToken","console","log","catch","err","alert","message","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext)\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false)\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPasword = passwordInputRef.current.value;\n\n    //optional: Add Validations (REGEX) [password > 8 characters, contains @#$!%^, at least one number]\n\n        \n    setIsLoading(true)\n    let url;\n    if (isLogin) {\n      //sign in\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAXnD_ob8wbuFKBWW1PDHwceGSljY5n-Uw\"\n    } else {\n      //sign up\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAXnD_ob8wbuFKBWW1PDHwceGSljY5n-Uw\"\n    }\n\n    fetch(url, \n    {\n        method: 'POST',\n        body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPasword,\n            returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n    }).then((res) => {\n      setIsLoading(false)\n      if (res.ok) {\n        return res.json()\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication Failed';\n          // if (data && data.error && data.error.message) {\n          //   errorMessage = data.error.message;\n          // }\n          // alert(errorMessage)\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      authCtx.login(data.idToken)\n\n      console.log(data)\n    })\n    .catch(err => {\n      alert(err.message)\n      setIsLoading(false)\n    })\n    \n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Sending Request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}